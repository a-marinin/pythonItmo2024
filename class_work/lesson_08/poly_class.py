class T1:
    def __init__(self):
        self.n = 10

    def total(self, a):
        return self.n + int(a)


class T2:
    def __init__(self):
        self.string = 'Hi'

    def total(self, a):
        return len(self.string + str(a))


t1 = T1()
t2 = T2()

'''
Сама суть использования полиморфизма заключается вот в этом самом действии:
Мы можем вызвать один и тот же метод, с одними и теми же параметрами для разных объектов. 
Это могут быть совершенно разные объекты, ничем друг с другом не связаные, но иметь одинаковые методы и принимать одинаковые параметры.
А значения они будут возвращать уже в зависимости от действий уже конкретного класса.  
'''

# вызываем или так
# print(t1.total(35))  # Результат: 45
# print(t1.total(35))  # Результат: 4

# или так
for i in (t1, t2):
    print(i.total(35))  # Результат: 45 4
