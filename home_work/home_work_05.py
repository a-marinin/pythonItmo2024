def decor_func(f):  # Это декоратор
    def result(x):  # Такая запись возможно, если мы точно уведерены, что все функции будут принимать только 1 аргумент
        r = f(x)  # Вызывает функцию, которую мы принями в качестве аргумента, передаём в неё x
        if isinstance(r, int):  # Если декорируемая функция возвращает тип данных int
            print(f'{r} - Тип данных int. Всё в порядке.')
        else:  # Если декорируемая функция возвращает тип данных отличный от int
            print(f'{r} - Тип данных не int! Выводим ошибку!')
            raise Exception('Декорируемая функция возвращает тип данных не int')  # Выводим кастомное исключение
        return r
    return result


@decor_func
def square(x):  # Это Функция 1 - возвращает квадрат числа
    return x ** 2


@decor_func  # Это Функция 2 - возвращает произведения числа и 2-х
def multiply(x):
    return x * 2


square(3)  # 9 - Тип данных int. Всё в порядке.
multiply(3)  # 6 - Тип данных int. Всё в порядке.

square(3.1)  # Exception: Декорируемая функция возвращает тип данных не int
multiply(3.1)  # Exception: Декорируемая функция возвращает тип данных не int
